{"data":{"mdx":{"id":"c35ac7a6-ee47-5da4-8f96-b823512ecec8","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dynamic Field Enrichment & Extraction\",\n  \"slug\": \"dynamic-field-enrichment-extraction\",\n  \"hidden\": true,\n  \"createdAt\": \"2020-08-14T23:09:05.774Z\",\n  \"updatedAt\": \"2020-09-15T20:10:53.589Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Dynamic Field Enrichment & Extraction is a tool to normalize event payloads using Event Rules. This capability allows you to copy important data from any combination of source event fields into any PagerDuty Common Event Format (CEF) field. Translate difficult machine terms and code into helpful context for responders so they can effectively respond to the problem. Dynamic Field Enrichment & Extraction can also be used to enhance Event Intelligence capabilities by customizing alerts, influencing the Intelligent Alert Grouping and Intelligent Triage machine learning algorithms. \"), mdx(\"p\", null, \"Dynamic Field Enrichment & Extraction is composed of two functions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Create Variables\"), \": Using this ability, you can capture snippets from a source event for later use.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Replace Common Event Format Fields\"), \": When events are sent to PagerDuty, they are transformed into Common Event Format. Previously, Event Rules could only replace Summary or add a Deduplication Key, and these abilities were limited to a direct mapping from one field as a full replacement. E.g., if you replaced the summary, you couldn't keep any part of the existing summary. Now, this ability is extended to replace any CEF field or even create new key values within the Custom Details object.\\n\", \"[block:callout]\", \"\\n{\\n\\\"type\\\": \\\"info\\\",\\n\\\"title\\\": \\\"Early Access\\\",\\n\\\"body\\\": \\\"This capability is currently in Early Access and is available to all Event Intelligence & Digital Operations customers. Its features and documentation are subject to change.\\\"\\n}\\n\", \"[/block]\")), mdx(\"h1\", null, \"Configure Dynamic Field Enrichment & Extraction\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Customize Event Fields\"), \" section of your event rule, under \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Define Custom Variable\"), \", create a variable from event fields by entering a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Name\"), \". Use a short descriptive name to represent the value that you will use later on to define a CEF field. Then enter a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Value\"), \" for the variable and the origin \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Source\"), \". Values are defined using valid RE2 regular expression syntax, and you can add as much complexity as you want with Regex to customize what part of each field you capture into a variable. You may also use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Sample Events\"), \" on the right as a reference for variables by clicking \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Show Details\"), \". You may add multiple variables by clicking \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Add Variable\"), \" in the upper right of the Customize Event Fields panel, or delete variables by clicking the :fa-trash-alt: icon directly to the right of the variable.\\n\", \"[block:image]\", \"\\n{\\n\\\"images\\\": [\\n{\\n\\\"image\\\": \", \"[\\n\\\"https://files.readme.io/3d8a94e-dynamic-field-enrichment-define-custom-variable.png\\\",\\n\\\"dynamic-field-enrichment-define-custom-variable.png\\\",\\n722,\\n249,\\n\\\"#d8e1f5\\\"\\n]\", \"\\n}\\n]\\n}\\n\", \"[/block]\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Next, under \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Replace Event Field\"), \", select your preferred \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Event Field (CEF)\"), \" from the left dropdown. Select whether you would like to use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Regex\"), \" or a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Template\"), \" from the right hand dropdown. If you are using a text Template, you can reference a variable defined in step 1 using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{{ }}\"), \" brackets (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{{class}}\"), \") in the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Value\"), \" field. If you are using Regex, enter a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Value\"), \" and the origin \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Source\"), \".\\n\", \"[block:image]\", \"\\n{\\n\\\"images\\\": [\\n{\\n\\\"image\\\": \", \"[\\n\\\"https://files.readme.io/4069b41-dynamic-field-enrichment-cef-fields.png\\\",\\n\\\"dynamic-field-enrichment-cef-fields.png\\\",\\n116,\\n267,\\n\\\"#f6f6f6\\\"\\n]\", \"\\n}\\n]\\n}\\n\", \"[/block]\")), mdx(\"p\", null, \"[block:image]\", \"\\n{\\n\\\"images\\\": [\\n{\\n\\\"image\\\": \", \"[\\n\\\"https://files.readme.io/69fae17-dynamic-field-enrichment-template-regex.png\\\",\\n\\\"dynamic-field-enrichment-template-regex.png\\\",\\n121,\\n80,\\n\\\"#c6cfdc\\\"\\n]\", \"\\n}\\n]\\n}\\n\", \"[/block]\"), mdx(\"p\", null, \"[block:image]\", \"\\n{\\n\\\"images\\\": [\\n{\\n\\\"image\\\": \", \"[\\n\\\"https://files.readme.io/568e8ca-dynamic-field-enrichment-replace-event-field.png\\\",\\n\\\"dynamic-field-enrichment-replace-event-field.png\\\",\\n719,\\n187,\\n\\\"#f9f9f9\\\"\\n]\", \"\\n}\\n]\\n}\\n\", \"[/block]\", \"\\nConfigure the rest of the event rule to your preference and then click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Save Rule\"), \" in the lower right of the screen.\"), mdx(\"h2\", {\n    \"id\": \"set-a-deduplication-key-with-event-rules\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#set-a-deduplication-key-with-event-rules\",\n    \"aria-label\": \"set a deduplication key with event rules permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Set a Deduplication Key with Event Rules\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dedup_key\"), \" field is used to merge events into a single alert. Events with the same \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dedup_key\"), \" can update the status of the alert they are automatically merged into.\"), mdx(\"p\", null, \"To set a deduplication key:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Customize Event Fields\"), \" section of your event rule, under \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Define Custom Variable\"), \", create a variable from event fields by entering a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Name\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Value\"), \" and the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Source\"), \". You may use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Sample Events\"), \" on the right to create these variables.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Next, under \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Replace Event Field\"), \", in the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Event Field (CEF)\"), \" field select \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Dedup Key\"), \" from the dropdown. Select whether you would like to use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Regex\"), \" or a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Template\"), \" from the right hand dropdown. If you are using a Template, you can reference a variable defined in step 1 using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{{variable name here}}\"), \" brackets as the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Value\"), \". If you are using Regex, enter a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Value\"), \" and the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Source\"), \".\")), mdx(\"h2\", {\n    \"id\": \"add-or-replace-the-summary-field-with-event-rules\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#add-or-replace-the-summary-field-with-event-rules\",\n    \"aria-label\": \"add or replace the summary field with event rules permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Add or Replace the Summary Field with Event Rules\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"summary\"), \" field is used to create the incident title. Titles should be descriptive and tell responders what is happening.\"), mdx(\"p\", null, \"To set a summary field:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Customize Event Fields\"), \" section of your event rule, under \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Define Custom Variable\"), \", create a variable from event fields by entering a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Name\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Value\"), \" and the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Source\"), \". You may use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Sample Events\"), \" on the right to create these variables.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Next, under \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Replace Event Field\"), \", in the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Event Field (CEF)\"), \" field select \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Summary\"), \" from the dropdown. Select whether you would like to use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Regex\"), \" or a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Template\"), \" from the right hand dropdown. If you are using a Template, you can reference a variable defined in step 1 using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{{variable name here}}\"), \" as the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Value\"), \". If you are using Regex, enter a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Value\"), \" and the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Source\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#configure-dynamic-field-enrichment--extraction","title":"Configure Dynamic Field Enrichment & Extraction","items":[{"url":"#set-a-deduplication-key-with-event-rules","title":"Set a Deduplication Key with Event Rules"},{"url":"#add-or-replace-the-summary-field-with-event-rules","title":"Add or Replace the Summary Field with Event Rules"}]}]},"frontmatter":{"title":"Dynamic Field Enrichment & Extraction"}}},"pageContext":{"id":"c35ac7a6-ee47-5da4-8f96-b823512ecec8"}}