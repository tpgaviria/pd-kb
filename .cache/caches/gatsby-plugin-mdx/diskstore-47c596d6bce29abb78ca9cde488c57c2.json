{"expireTime":9007200861688147000,"key":"gatsby-plugin-mdx-entire-payload-dd4dadb75b58142993ffccb3d94850eb-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"At any point in time, PagerDuty could be running from any of the following data centers:","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":89,"offset":88},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":89,"offset":88},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS US West (Northern California)","position":{"start":{"line":3,"column":3,"offset":92},"end":{"line":3,"column":36,"offset":125},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":92},"end":{"line":3,"column":36,"offset":125},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":90},"end":{"line":3,"column":36,"offset":125},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS US West (Oregon)","position":{"start":{"line":4,"column":3,"offset":128},"end":{"line":4,"column":23,"offset":148},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":128},"end":{"line":4,"column":23,"offset":148},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":126},"end":{"line":4,"column":23,"offset":148},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS US East (Ohio)","position":{"start":{"line":5,"column":3,"offset":151},"end":{"line":5,"column":21,"offset":169},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":151},"end":{"line":5,"column":21,"offset":169},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":149},"end":{"line":5,"column":21,"offset":169},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":90},"end":{"line":5,"column":21,"offset":169},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Hosting Locations\",\"slug\":\"hosting-locations\",\"hidden\":false,\"createdAt\":\"2017-06-14T08:19:26.132Z\",\"updatedAt\":\"2020-09-29T17:06:40.034Z\"}","position":{"start":{"line":7,"column":1,"offset":171},"end":{"line":7,"column":178,"offset":348},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":178,"offset":348}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hosting Locations\",\n  \"slug\": \"hosting-locations\",\n  \"hidden\": false,\n  \"createdAt\": \"2017-06-14T08:19:26.132Z\",\n  \"updatedAt\": \"2020-09-29T17:06:40.034Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"At any point in time, PagerDuty could be running from any of the following data centers:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AWS US West (Northern California)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AWS US West (Oregon)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AWS US East (Ohio)\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Hosting Locations\",\n  \"slug\": \"hosting-locations\",\n  \"hidden\": false,\n  \"createdAt\": \"2017-06-14T08:19:26.132Z\",\n  \"updatedAt\": \"2020-09-29T17:06:40.034Z\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`At any point in time, PagerDuty could be running from any of the following data centers:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`AWS US West (Northern California)`}</li>\n      <li parentName=\"ul\">{`AWS US West (Oregon)`}</li>\n      <li parentName=\"ul\">{`AWS US East (Ohio)`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}