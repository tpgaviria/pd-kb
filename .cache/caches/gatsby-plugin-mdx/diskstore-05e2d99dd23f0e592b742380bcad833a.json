{"expireTime":9007200861686579000,"key":"gatsby-plugin-mdx-entire-payload-30a71dc99ce74ad82165ff9eaab4a427-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Below are some common issues that you may run into when trying to integrate Zabbix with PagerDuty and steps for troubleshooting those problems. ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":145,"offset":144},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":145,"offset":144},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#section-potential-issues-within-the-zabbix-configuration","children":[{"type":"text","value":"Potential Issues within the Zabbix Configuration","position":{"start":{"line":2,"column":4,"offset":148},"end":{"line":2,"column":52,"offset":196},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":147},"end":{"line":2,"column":112,"offset":256},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":147},"end":{"line":2,"column":112,"offset":256},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":145},"end":{"line":2,"column":112,"offset":256},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#section-troubleshooting-issues-with-the-agent-based-integration","children":[{"type":"text","value":"Troubleshooting Issues with the Agent-based Integration","position":{"start":{"line":3,"column":4,"offset":260},"end":{"line":3,"column":59,"offset":315},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":259},"end":{"line":3,"column":126,"offset":382},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":259},"end":{"line":3,"column":126,"offset":382},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":257},"end":{"line":3,"column":126,"offset":382},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#section-troubleshooting-issues-with-the-python-based-integration","children":[{"type":"text","value":"Troubleshooting Issues with the Python-based Integration","position":{"start":{"line":4,"column":4,"offset":386},"end":{"line":4,"column":60,"offset":442},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":385},"end":{"line":4,"column":128,"offset":510},"indent":[]}},{"type":"text","value":" \n","position":{"start":{"line":4,"column":128,"offset":510},"end":{"line":5,"column":1,"offset":512},"indent":[1]}},{"type":"linkReference","identifier":"block:api-header","label":"block:api-header","referenceType":"shortcut","children":[{"type":"text","value":"block:api-header","position":{"start":{"line":5,"column":2,"offset":513},"end":{"line":5,"column":18,"offset":529},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":512},"end":{"line":5,"column":19,"offset":530},"indent":[]}},{"type":"text","value":"\n{\n  \"title\": \"Potential Issues within the Zabbix Configuration\"\n}\n","position":{"start":{"line":5,"column":19,"offset":530},"end":{"line":9,"column":1,"offset":597},"indent":[1,1,1,1]}},{"type":"linkReference","identifier":"/block","label":"/block","referenceType":"shortcut","children":[{"type":"text","value":"/block","position":{"start":{"line":9,"column":2,"offset":598},"end":{"line":9,"column":8,"offset":604},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":597},"end":{"line":9,"column":9,"offset":605},"indent":[]}},{"type":"text","value":"\nCheck whether Zabbix has attempted to send an event to PagerDuty by viewing your Zabbix logs. Make sure the PagerDuty action was called, and if there were any errors in doing so.","position":{"start":{"line":9,"column":9,"offset":605},"end":{"line":10,"column":179,"offset":784},"indent":[1]}}],"position":{"start":{"line":4,"column":3,"offset":385},"end":{"line":10,"column":179,"offset":784},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":4,"column":1,"offset":383},"end":{"line":10,"column":179,"offset":784},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":2,"column":1,"offset":145},"end":{"line":10,"column":179,"offset":784},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For Zabbix 2.x: navigate go to ","position":{"start":{"line":12,"column":1,"offset":786},"end":{"line":12,"column":32,"offset":817},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Monitoring → Events","position":{"start":{"line":12,"column":34,"offset":819},"end":{"line":12,"column":53,"offset":838},"indent":[]}}],"position":{"start":{"line":12,"column":32,"offset":817},"end":{"line":12,"column":55,"offset":840},"indent":[]}},{"type":"text","value":", then click the event timestamp for the problem event. Check the ","position":{"start":{"line":12,"column":55,"offset":840},"end":{"line":12,"column":121,"offset":906},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Message actions","position":{"start":{"line":12,"column":123,"offset":908},"end":{"line":12,"column":138,"offset":923},"indent":[]}}],"position":{"start":{"line":12,"column":121,"offset":906},"end":{"line":12,"column":140,"offset":925},"indent":[]}},{"type":"text","value":" section in the event details.\nFor Zabbix 3.x: navigate to ","position":{"start":{"line":12,"column":140,"offset":925},"end":{"line":13,"column":29,"offset":984},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Reports → Action Log","position":{"start":{"line":13,"column":31,"offset":986},"end":{"line":13,"column":51,"offset":1006},"indent":[]}}],"position":{"start":{"line":13,"column":29,"offset":984},"end":{"line":13,"column":53,"offset":1008},"indent":[]}},{"type":"text","value":" to view the Status of the Zabbix event.","position":{"start":{"line":13,"column":53,"offset":1008},"end":{"line":13,"column":93,"offset":1048},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":786},"end":{"line":13,"column":93,"offset":1048},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"##Events are not being sent to the PagerDuty user/action","position":{"start":{"line":15,"column":1,"offset":1050},"end":{"line":15,"column":57,"offset":1106},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1050},"end":{"line":15,"column":57,"offset":1106},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make sure the PagerDuty group in Zabbix has read permissions for the hosts and/or host groups in question. Also confirm that the PagerDuty user is in the PagerDuty group.","position":{"start":{"line":16,"column":3,"offset":1109},"end":{"line":16,"column":173,"offset":1279},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":1109},"end":{"line":16,"column":173,"offset":1279},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1107},"end":{"line":16,"column":173,"offset":1279},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Check that the PagerDuty media type is enabled in ","position":{"start":{"line":17,"column":3,"offset":1282},"end":{"line":17,"column":53,"offset":1332},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Configuration → Media types","position":{"start":{"line":17,"column":55,"offset":1334},"end":{"line":17,"column":82,"offset":1361},"indent":[]}}],"position":{"start":{"line":17,"column":53,"offset":1332},"end":{"line":17,"column":84,"offset":1363},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":17,"column":84,"offset":1363},"end":{"line":17,"column":85,"offset":1364},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":1282},"end":{"line":17,"column":85,"offset":1364},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":1280},"end":{"line":17,"column":85,"offset":1364},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1107},"end":{"line":17,"column":85,"offset":1364},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"##Events appear to be sent to the PagerDuty user/action, but aren't showing up in PagerDuty","position":{"start":{"line":19,"column":1,"offset":1366},"end":{"line":19,"column":92,"offset":1457},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1366},"end":{"line":19,"column":92,"offset":1457},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Both the ","position":{"start":{"line":20,"column":3,"offset":1460},"end":{"line":20,"column":12,"offset":1469},"indent":[]}},{"type":"inlineCode","value":"zabbix-agent","position":{"start":{"line":20,"column":12,"offset":1469},"end":{"line":20,"column":26,"offset":1483},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":20,"column":26,"offset":1483},"end":{"line":20,"column":31,"offset":1488},"indent":[]}},{"type":"inlineCode","value":"zabbix-server","position":{"start":{"line":20,"column":31,"offset":1488},"end":{"line":20,"column":46,"offset":1503},"indent":[]}},{"type":"text","value":" services must be running for Zabbix to send notifications to PagerDuty. The check that these are running use the following commands:","position":{"start":{"line":20,"column":46,"offset":1503},"end":{"line":20,"column":179,"offset":1636},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":1460},"end":{"line":20,"column":179,"offset":1636},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1458},"end":{"line":20,"column":179,"offset":1636},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1458},"end":{"line":20,"column":179,"offset":1636},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"service zabbix-agent status\nservice zabbix-server status","position":{"start":{"line":22,"column":1,"offset":1638},"end":{"line":25,"column":4,"offset":1702},"indent":[1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make sure your Zabbix server can make outbound HTTP/HTTPS connections to events.pagerduty.com on ports 80 and 443. If your environment requires a proxy to be set for outbound HTTP/HTTPS connections, make sure you ","position":{"start":{"line":27,"column":3,"offset":1706},"end":{"line":27,"column":216,"offset":1919},"indent":[]}},{"type":"link","title":null,"url":"https://www.pagerduty.com/docs/guides/agent-install-guide/#Proxy","children":[{"type":"text","value":"set the proxy in the agent configuration","position":{"start":{"line":27,"column":217,"offset":1920},"end":{"line":27,"column":257,"offset":1960},"indent":[]}}],"position":{"start":{"line":27,"column":216,"offset":1919},"end":{"line":27,"column":324,"offset":2027},"indent":[]}},{"type":"text","value":" or see the information below for ","position":{"start":{"line":27,"column":324,"offset":2027},"end":{"line":27,"column":358,"offset":2061},"indent":[]}},{"type":"link","title":null,"url":"#section-troubleshooting-issues-with-the-python-based-integration","children":[{"type":"text","value":"using a proxy with the old Python integration","position":{"start":{"line":27,"column":359,"offset":2062},"end":{"line":27,"column":404,"offset":2107},"indent":[]}}],"position":{"start":{"line":27,"column":358,"offset":2061},"end":{"line":27,"column":472,"offset":2175},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":27,"column":472,"offset":2175},"end":{"line":27,"column":473,"offset":2176},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":1706},"end":{"line":27,"column":473,"offset":2176},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1704},"end":{"line":27,"column":473,"offset":2176},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Check that the integration key is set correctly in your PagerDuty user's media settings.","position":{"start":{"line":28,"column":3,"offset":2179},"end":{"line":28,"column":91,"offset":2267},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":2179},"end":{"line":28,"column":91,"offset":2267},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":2177},"end":{"line":28,"column":91,"offset":2267},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If you see an error such as \"pagerduty_python: PagerDuty server REJECTED the event in file...Event object is invalid,\" check the trigger and recovery subjects and message formats in your PagerDuty action.","position":{"start":{"line":29,"column":3,"offset":2270},"end":{"line":29,"column":207,"offset":2474},"indent":[]}}],"position":{"start":{"line":29,"column":3,"offset":2270},"end":{"line":29,"column":207,"offset":2474},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":2268},"end":{"line":29,"column":207,"offset":2474},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1704},"end":{"line":29,"column":207,"offset":2474},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Under ","position":{"start":{"line":31,"column":1,"offset":2476},"end":{"line":31,"column":7,"offset":2482},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Configuration → Actions","position":{"start":{"line":31,"column":9,"offset":2484},"end":{"line":31,"column":32,"offset":2507},"indent":[]}}],"position":{"start":{"line":31,"column":7,"offset":2482},"end":{"line":31,"column":34,"offset":2509},"indent":[]}},{"type":"text","value":", select the PagerDuty notification action to view its details. Remove any extra characters, such as whitespace or a newline-character after the text so that the configuration matches this exactly:","position":{"start":{"line":31,"column":34,"offset":2509},"end":{"line":31,"column":231,"offset":2706},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":2476},"end":{"line":31,"column":231,"offset":2706},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Default subject","position":{"start":{"line":33,"column":3,"offset":2710},"end":{"line":33,"column":18,"offset":2725},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":2708},"end":{"line":33,"column":20,"offset":2727},"indent":[]}},{"type":"text","value":": ","position":{"start":{"line":33,"column":20,"offset":2727},"end":{"line":33,"column":22,"offset":2729},"indent":[]}},{"type":"inlineCode","value":"trigger","position":{"start":{"line":33,"column":22,"offset":2729},"end":{"line":33,"column":31,"offset":2738},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":33,"column":31,"offset":2738},"end":{"line":34,"column":1,"offset":2739},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Recovery subject","position":{"start":{"line":34,"column":3,"offset":2741},"end":{"line":34,"column":19,"offset":2757},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":2739},"end":{"line":34,"column":21,"offset":2759},"indent":[]}},{"type":"text","value":": ","position":{"start":{"line":34,"column":21,"offset":2759},"end":{"line":34,"column":23,"offset":2761},"indent":[]}},{"type":"inlineCode","value":"resolve","position":{"start":{"line":34,"column":23,"offset":2761},"end":{"line":34,"column":32,"offset":2770},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":32,"offset":2770},"end":{"line":35,"column":1,"offset":2771},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Default message","position":{"start":{"line":35,"column":3,"offset":2773},"end":{"line":35,"column":18,"offset":2788},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":2771},"end":{"line":35,"column":20,"offset":2790},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":35,"column":20,"offset":2790},"end":{"line":35,"column":25,"offset":2795},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Recovery message","position":{"start":{"line":35,"column":27,"offset":2797},"end":{"line":35,"column":43,"offset":2813},"indent":[]}}],"position":{"start":{"line":35,"column":25,"offset":2795},"end":{"line":35,"column":45,"offset":2815},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":35,"column":45,"offset":2815},"end":{"line":35,"column":46,"offset":2816},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":2708},"end":{"line":35,"column":46,"offset":2816},"indent":[1,1]}},{"type":"code","lang":null,"meta":null,"value":"name:{TRIGGER.NAME}\nid:{TRIGGER.ID}\nstatus:{TRIGGER.STATUS}\nhostname:{HOSTNAME}\nip:{IPADDRESS}\nvalue:{TRIGGER.VALUE}\nevent_id:{EVENT.ID}\nseverity:{TRIGGER.SEVERITY}","position":{"start":{"line":37,"column":1,"offset":2818},"end":{"line":46,"column":4,"offset":2990},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If you're using Zabbix 3.x, make sure you have specified these script parameters for the PagerDuty media type under Administration → Media types:","position":{"start":{"line":47,"column":3,"offset":2993},"end":{"line":47,"column":148,"offset":3138},"indent":[]}}],"position":{"start":{"line":47,"column":3,"offset":2993},"end":{"line":47,"column":148,"offset":3138},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"- {ALERT.SENDTO}\n- {ALERT.SUBJECT}\n- {ALERT.MESSAGE}","position":{"start":{"line":48,"column":1,"offset":3139},"end":{"line":50,"column":22,"offset":3203},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"block:image","label":"block:image","referenceType":"shortcut","children":[{"type":"text","value":"block:image","position":{"start":{"line":51,"column":2,"offset":3205},"end":{"line":51,"column":13,"offset":3216},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":3204},"end":{"line":51,"column":14,"offset":3217},"indent":[]}},{"type":"text","value":"\n{\n  \"images\": [\n    {\n      \"image\": ","position":{"start":{"line":51,"column":14,"offset":3217},"end":{"line":55,"column":16,"offset":3255},"indent":[1,1,1,1]}},{"type":"linkReference","identifier":" \"https://files.readme.io/50d6592-zabbixtroubleshooting_img2.png\", \"zabbixtroubleshooting_img2.png\", 776, 489, \"#124c76\" ","label":"\n        \"https://files.readme.io/50d6592-ZabbixTroubleshooting_img2.png\",\n        \"ZabbixTroubleshooting_img2.png\",\n        776,\n        489,\n        \"#124c76\"\n      ","referenceType":"shortcut","children":[{"type":"text","value":"\n        \"https://files.readme.io/50d6592-ZabbixTroubleshooting_img2.png\",\n        \"ZabbixTroubleshooting_img2.png\",\n        776,\n        489,\n        \"#124c76\"\n      ","position":{"start":{"line":55,"column":17,"offset":3256},"end":{"line":61,"column":7,"offset":3423},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":55,"column":16,"offset":3255},"end":{"line":61,"column":8,"offset":3424},"indent":[1,1,1,1,1,1]}},{"type":"text","value":"\n    }\n  ]\n}\n","position":{"start":{"line":61,"column":8,"offset":3424},"end":{"line":65,"column":1,"offset":3437},"indent":[1,1,1,1]}},{"type":"linkReference","identifier":"/block","label":"/block","referenceType":"shortcut","children":[{"type":"text","value":"/block","position":{"start":{"line":65,"column":2,"offset":3438},"end":{"line":65,"column":8,"offset":3444},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":3437},"end":{"line":65,"column":9,"offset":3445},"indent":[]}},{"type":"text","value":"\n##Incidents are being triggered in PagerDuty, but they are not being resolved automatically after recovering in Zabbix","position":{"start":{"line":65,"column":9,"offset":3445},"end":{"line":66,"column":119,"offset":3564},"indent":[1]}}],"position":{"start":{"line":51,"column":1,"offset":3204},"end":{"line":66,"column":119,"offset":3564},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":47,"column":1,"offset":2991},"end":{"line":66,"column":119,"offset":3564},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":47,"column":1,"offset":2991},"end":{"line":66,"column":119,"offset":3564},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Ensure that your ","position":{"start":{"line":68,"column":4,"offset":3569},"end":{"line":68,"column":21,"offset":3586},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"PagerDuty Notifications","position":{"start":{"line":68,"column":22,"offset":3587},"end":{"line":68,"column":45,"offset":3610},"indent":[]}}],"position":{"start":{"line":68,"column":21,"offset":3586},"end":{"line":68,"column":46,"offset":3611},"indent":[]}},{"type":"text","value":" action has messaging operations (send to user / group) defined for its ","position":{"start":{"line":68,"column":46,"offset":3611},"end":{"line":68,"column":118,"offset":3683},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Recovery operations","position":{"start":{"line":68,"column":120,"offset":3685},"end":{"line":68,"column":139,"offset":3704},"indent":[]}}],"position":{"start":{"line":68,"column":118,"offset":3683},"end":{"line":68,"column":141,"offset":3706},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":68,"column":141,"offset":3706},"end":{"line":68,"column":142,"offset":3707},"indent":[]}}],"position":{"start":{"line":68,"column":4,"offset":3569},"end":{"line":68,"column":142,"offset":3707},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":3566},"end":{"line":68,"column":142,"offset":3707},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make sure that the messaging operations configured for the PagerDuty Notifications action have the same message template for the main action as for the recovery action","position":{"start":{"line":69,"column":4,"offset":3711},"end":{"line":69,"column":171,"offset":3878},"indent":[]}}],"position":{"start":{"line":69,"column":4,"offset":3711},"end":{"line":69,"column":171,"offset":3878},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":3708},"end":{"line":69,"column":171,"offset":3878},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make sure the message template is the one given in the integration guide for your Zabbix integration: ","position":{"start":{"line":70,"column":4,"offset":3882},"end":{"line":70,"column":106,"offset":3984},"indent":[]}},{"type":"link","title":null,"url":"https://www.pagerduty.com/docs/guides/zabbix-integration-guide/","children":[{"type":"text","value":"Zabbix Integration Guide","position":{"start":{"line":70,"column":107,"offset":3985},"end":{"line":70,"column":131,"offset":4009},"indent":[]}}],"position":{"start":{"line":70,"column":106,"offset":3984},"end":{"line":70,"column":197,"offset":4075},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":70,"column":197,"offset":4075},"end":{"line":70,"column":202,"offset":4080},"indent":[]}},{"type":"link","title":null,"url":"https://www.pagerduty.com/docs/guides/zabbix-3-integration-guide/","children":[{"type":"text","value":"Zabbix 3 Integration Guide","position":{"start":{"line":70,"column":203,"offset":4081},"end":{"line":70,"column":229,"offset":4107},"indent":[]}}],"position":{"start":{"line":70,"column":202,"offset":4080},"end":{"line":70,"column":297,"offset":4175},"indent":[]}},{"type":"text","value":" (also produced above; see ","position":{"start":{"line":70,"column":297,"offset":4175},"end":{"line":70,"column":324,"offset":4202},"indent":[]}},{"type":"link","title":null,"url":"#section-potential-issues-within-the-zabbix-configuration","children":[{"type":"text","value":"Potential Issues Within the Zabbix Configuration","position":{"start":{"line":70,"column":325,"offset":4203},"end":{"line":70,"column":373,"offset":4251},"indent":[]}}],"position":{"start":{"line":70,"column":324,"offset":4202},"end":{"line":70,"column":433,"offset":4311},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":70,"column":433,"offset":4311},"end":{"line":70,"column":435,"offset":4313},"indent":[]}}],"position":{"start":{"line":70,"column":4,"offset":3882},"end":{"line":70,"column":435,"offset":4313},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":3879},"end":{"line":70,"column":435,"offset":4313},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Ensure that the recovery operations' default message subject is ","position":{"start":{"line":71,"column":4,"offset":4317},"end":{"line":71,"column":68,"offset":4381},"indent":[]}},{"type":"inlineCode","value":"resolve","position":{"start":{"line":71,"column":68,"offset":4381},"end":{"line":71,"column":77,"offset":4390},"indent":[]}},{"type":"text","value":", verbatim (it is case sensitive)\n","position":{"start":{"line":71,"column":77,"offset":4390},"end":{"line":72,"column":1,"offset":4424},"indent":[1]}},{"type":"linkReference","identifier":"block:api-header","label":"block:api-header","referenceType":"shortcut","children":[{"type":"text","value":"block:api-header","position":{"start":{"line":72,"column":2,"offset":4425},"end":{"line":72,"column":18,"offset":4441},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":4424},"end":{"line":72,"column":19,"offset":4442},"indent":[]}},{"type":"text","value":"\n{\n  \"title\": \"Troubleshooting Issues with the Agent-based Integration\"\n}\n","position":{"start":{"line":72,"column":19,"offset":4442},"end":{"line":76,"column":1,"offset":4516},"indent":[1,1,1,1]}},{"type":"linkReference","identifier":"/block","label":"/block","referenceType":"shortcut","children":[{"type":"text","value":"/block","position":{"start":{"line":76,"column":2,"offset":4517},"end":{"line":76,"column":8,"offset":4523},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":4516},"end":{"line":76,"column":9,"offset":4524},"indent":[]}},{"type":"text","value":"\n##Verify the Agent is Installed\nThe most common problem we see when we begin troubleshooting agent integrations is that the agent has not been installed successfully (i.e. trying to install on an incompatible distribution like CentOS 5). The first step in troubleshooting Agent-based integrations is to make sure that the PagerDuty Agent is both compatible with your distribution and successfully installed by following the steps in our Agent Install Guide.","position":{"start":{"line":76,"column":9,"offset":4524},"end":{"line":78,"column":426,"offset":4982},"indent":[1,1]}}],"position":{"start":{"line":71,"column":4,"offset":4317},"end":{"line":78,"column":426,"offset":4982},"indent":[1,1,1,1,1,1,1]}}],"position":{"start":{"line":71,"column":1,"offset":4314},"end":{"line":78,"column":426,"offset":4982},"indent":[1,1,1,1,1,1,1]}}],"position":{"start":{"line":68,"column":1,"offset":3566},"end":{"line":78,"column":426,"offset":4982},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"CentOS 5 users","position":{"start":{"line":80,"column":3,"offset":4986},"end":{"line":80,"column":17,"offset":5000},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":4984},"end":{"line":80,"column":19,"offset":5002},"indent":[]}},{"type":"text","value":": You will need to use the older ","position":{"start":{"line":80,"column":19,"offset":5002},"end":{"line":80,"column":52,"offset":5035},"indent":[]}},{"type":"link","title":null,"url":"https://www.pagerduty.com/docs/guides/zabbix-integration-guide-agentless/","children":[{"type":"text","value":"Python-based integration","position":{"start":{"line":80,"column":53,"offset":5036},"end":{"line":80,"column":77,"offset":5060},"indent":[]}}],"position":{"start":{"line":80,"column":52,"offset":5035},"end":{"line":80,"column":153,"offset":5136},"indent":[]}},{"type":"text","value":", as the PagerDuty Agent requires a newer version of Python than the version available with CentOS 5.","position":{"start":{"line":80,"column":153,"offset":5136},"end":{"line":80,"column":254,"offset":5237},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":4984},"end":{"line":80,"column":254,"offset":5237},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"##Verify the Agent is Running\nOnce you've verified the agent has been successfully installed, you'll want to make sure that it is running. You can check the status by running ","position":{"start":{"line":82,"column":1,"offset":5239},"end":{"line":83,"column":146,"offset":5414},"indent":[1]}},{"type":"inlineCode","value":"service pdagent status","position":{"start":{"line":83,"column":146,"offset":5414},"end":{"line":83,"column":170,"offset":5438},"indent":[]}},{"type":"text","value":". If the agent isn't running, you can start it with the command ","position":{"start":{"line":83,"column":170,"offset":5438},"end":{"line":83,"column":234,"offset":5502},"indent":[]}},{"type":"inlineCode","value":"service pdagent start","position":{"start":{"line":83,"column":234,"offset":5502},"end":{"line":83,"column":257,"offset":5525},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":83,"column":257,"offset":5525},"end":{"line":83,"column":258,"offset":5526},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":5239},"end":{"line":83,"column":258,"offset":5526},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"##Check the Agent's Logs for Errors\nThe agent logs activity and errors to ","position":{"start":{"line":85,"column":1,"offset":5528},"end":{"line":86,"column":39,"offset":5602},"indent":[1]}},{"type":"inlineCode","value":"/var/log/pdagent/pdagentd.log","position":{"start":{"line":86,"column":39,"offset":5602},"end":{"line":86,"column":70,"offset":5633},"indent":[]}},{"type":"text","value":", which may contain information helpful in troubleshooting problems with the integration.","position":{"start":{"line":86,"column":70,"offset":5633},"end":{"line":86,"column":159,"offset":5722},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":5528},"end":{"line":86,"column":159,"offset":5722},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"##Trigger a Test Incident with the Agent's CLI\nTry manually triggering an incident using the pd-send command and check for errors (set ","position":{"start":{"line":88,"column":1,"offset":5724},"end":{"line":89,"column":89,"offset":5859},"indent":[1]}},{"type":"inlineCode","value":"PD_SERVICE_KEY","position":{"start":{"line":89,"column":89,"offset":5859},"end":{"line":89,"column":105,"offset":5875},"indent":[]}},{"type":"text","value":" to your own PagerDuty integration key):","position":{"start":{"line":89,"column":105,"offset":5875},"end":{"line":89,"column":145,"offset":5915},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":5724},"end":{"line":89,"column":145,"offset":5915},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"$ export PD_SERVICE_KEY=65d9cd0e14c04dae8ef86867277d138c\n$ pd-send -k $PD_SERVICE_KEY -t trigger -d \"Server is on fire\" -i server.fire","position":{"start":{"line":91,"column":1,"offset":5917},"end":{"line":94,"column":4,"offset":6059},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If an incident is triggered in PagerDuty, check the tips in the ","position":{"start":{"line":96,"column":1,"offset":6061},"end":{"line":96,"column":65,"offset":6125},"indent":[]}},{"type":"link","title":null,"url":"#section-potential-issues-within-the-zabbix-configuration","children":[{"type":"text","value":"Potential Issues within your Zabbix Configuration","position":{"start":{"line":96,"column":66,"offset":6126},"end":{"line":96,"column":115,"offset":6175},"indent":[]}}],"position":{"start":{"line":96,"column":65,"offset":6125},"end":{"line":96,"column":175,"offset":6235},"indent":[]}},{"type":"text","value":" section. You may need to verify the trigger subject and message in your Zabbix configuration.","position":{"start":{"line":96,"column":175,"offset":6235},"end":{"line":96,"column":269,"offset":6329},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":6061},"end":{"line":96,"column":269,"offset":6329},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"##Trigger a Test Incident with pd-zabbix\nTry manually triggering an incident using the ","position":{"start":{"line":98,"column":1,"offset":6331},"end":{"line":99,"column":47,"offset":6418},"indent":[1]}},{"type":"inlineCode","value":"pd-zabbix","position":{"start":{"line":99,"column":47,"offset":6418},"end":{"line":99,"column":58,"offset":6429},"indent":[]}},{"type":"text","value":" command and check for errors (set ","position":{"start":{"line":99,"column":58,"offset":6429},"end":{"line":99,"column":93,"offset":6464},"indent":[]}},{"type":"inlineCode","value":"PD_SERVICE_KEY","position":{"start":{"line":99,"column":93,"offset":6464},"end":{"line":99,"column":109,"offset":6480},"indent":[]}},{"type":"text","value":" to your own PagerDuty integration key):","position":{"start":{"line":99,"column":109,"offset":6480},"end":{"line":99,"column":149,"offset":6520},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":6331},"end":{"line":99,"column":149,"offset":6520},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"/usr/share/pdagent-integrations/bin/pd-zabbix PD_SERVICE_KEY trigger \"name:Test\nid:1\nstatus:onfire\nhostname:localhost\nip:127.0.0.1\nvalue:5\nevent_id:2\nseverity:1\"","position":{"start":{"line":101,"column":1,"offset":6522},"end":{"line":110,"column":4,"offset":6691},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"block:api-header","label":"block:api-header","referenceType":"shortcut","children":[{"type":"text","value":"block:api-header","position":{"start":{"line":111,"column":2,"offset":6693},"end":{"line":111,"column":18,"offset":6709},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":6692},"end":{"line":111,"column":19,"offset":6710},"indent":[]}},{"type":"text","value":"\n{\n  \"title\": \"Troubleshooting Issues with the Python-based Integration\"\n}\n","position":{"start":{"line":111,"column":19,"offset":6710},"end":{"line":115,"column":1,"offset":6785},"indent":[1,1,1,1]}},{"type":"linkReference","identifier":"/block","label":"/block","referenceType":"shortcut","children":[{"type":"text","value":"/block","position":{"start":{"line":115,"column":2,"offset":6786},"end":{"line":115,"column":8,"offset":6792},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":6785},"end":{"line":115,"column":9,"offset":6793},"indent":[]}},{"type":"text","value":"\n##Make Sure you have Python 2.7.9 or Newer\n Although the Python script was previously tested with Python 2.6, it now requires version 2.7.9 to make a secure connection to PagerDuty. This changed because SSLv3 is no longer enabled on our web servers due to the ","position":{"start":{"line":115,"column":9,"offset":6793},"end":{"line":117,"column":218,"offset":7054},"indent":[1,1]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/POODLE","children":[{"type":"text","value":"POODLE vulnerability","position":{"start":{"line":117,"column":219,"offset":7055},"end":{"line":117,"column":239,"offset":7075},"indent":[]}}],"position":{"start":{"line":117,"column":218,"offset":7054},"end":{"line":117,"column":278,"offset":7114},"indent":[]}},{"type":"text","value":", and older versions of Python try to use SSLv3. Python 2.7.9 uses a backported version of Python 3's SSL library, so versions 2.7.9 and newer (up to 3.x) are able to make a secure connection to PagerDuty. The script also does not work with Python 3.x due to other language changes in this version of Python.","position":{"start":{"line":117,"column":278,"offset":7114},"end":{"line":117,"column":586,"offset":7422},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":6692},"end":{"line":117,"column":586,"offset":7422},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"##Does your Environment Require a Proxy to be set for Outbound HTTP/HTTPS Connections?\nIf you need to set a proxy, use this modified version of the Python script for proxy support. Replace ","position":{"start":{"line":119,"column":1,"offset":7424},"end":{"line":120,"column":103,"offset":7613},"indent":[1]}},{"type":"inlineCode","value":"SOME_PROXY","position":{"start":{"line":120,"column":103,"offset":7613},"end":{"line":120,"column":115,"offset":7625},"indent":[]}},{"type":"text","value":" on line 68 with your proxy address (i.e. ","position":{"start":{"line":120,"column":115,"offset":7625},"end":{"line":120,"column":157,"offset":7667},"indent":[]}},{"type":"inlineCode","value":"http://proxy.company.com:3128","position":{"start":{"line":120,"column":157,"offset":7667},"end":{"line":120,"column":188,"offset":7698},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":120,"column":188,"offset":7698},"end":{"line":120,"column":190,"offset":7700},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":7424},"end":{"line":120,"column":190,"offset":7700},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"##Trigger a Test Incident with the pagerduty.py Script\nTry manually triggering an incident with ","position":{"start":{"line":122,"column":1,"offset":7702},"end":{"line":123,"column":42,"offset":7798},"indent":[1]}},{"type":"inlineCode","value":"pagerduty.py","position":{"start":{"line":123,"column":42,"offset":7798},"end":{"line":123,"column":56,"offset":7812},"indent":[]}},{"type":"text","value":" via the command line and check for errors (set ","position":{"start":{"line":123,"column":56,"offset":7812},"end":{"line":123,"column":104,"offset":7860},"indent":[]}},{"type":"inlineCode","value":"PD_SERVICE_KEY","position":{"start":{"line":123,"column":104,"offset":7860},"end":{"line":123,"column":120,"offset":7876},"indent":[]}},{"type":"text","value":" to your own PagerDuty integration key):","position":{"start":{"line":123,"column":120,"offset":7876},"end":{"line":123,"column":160,"offset":7916},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":7702},"end":{"line":123,"column":160,"offset":7916},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"/etc/zabbix/alert.d/pagerduty.py PD_SERVICE_KEY trigger \"name:Test\nid:1\nstatus:onfire\nhostname:localhost\nip:127.0.0.1\nvalue:5\nevent_id:2\nseverity:1\"","position":{"start":{"line":125,"column":1,"offset":7918},"end":{"line":134,"column":4,"offset":8074},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"##Verify the Python Script is in the Correct Location\nThe script should be placed in your ","position":{"start":{"line":136,"column":1,"offset":8076},"end":{"line":137,"column":37,"offset":8166},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"AlertScriptsPath","position":{"start":{"line":137,"column":39,"offset":8168},"end":{"line":137,"column":55,"offset":8184},"indent":[]}}],"position":{"start":{"line":137,"column":37,"offset":8166},"end":{"line":137,"column":57,"offset":8186},"indent":[]}},{"type":"text","value":". This is usually ","position":{"start":{"line":137,"column":57,"offset":8186},"end":{"line":137,"column":75,"offset":8204},"indent":[]}},{"type":"inlineCode","value":"/usr/lib/zabbix/alertscripts","position":{"start":{"line":137,"column":75,"offset":8204},"end":{"line":137,"column":105,"offset":8234},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":137,"column":105,"offset":8234},"end":{"line":137,"column":109,"offset":8238},"indent":[]}},{"type":"inlineCode","value":"/etc/zabbix/agent.d","position":{"start":{"line":137,"column":109,"offset":8238},"end":{"line":137,"column":130,"offset":8259},"indent":[]}},{"type":"text","value":", but could be different if you installed Zabbix from non-standard packages. You can find the correct path for your particular environment by checking ","position":{"start":{"line":137,"column":130,"offset":8259},"end":{"line":137,"column":281,"offset":8410},"indent":[]}},{"type":"inlineCode","value":"zabbix_server.conf","position":{"start":{"line":137,"column":281,"offset":8410},"end":{"line":137,"column":301,"offset":8430},"indent":[]}},{"type":"text","value":" in your Zabbix server configuration directory.","position":{"start":{"line":137,"column":301,"offset":8430},"end":{"line":137,"column":348,"offset":8477},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":8076},"end":{"line":137,"column":348,"offset":8477},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"##Verify the Zabbix User has Write Permissions\nThe script queues events in ","position":{"start":{"line":139,"column":1,"offset":8479},"end":{"line":140,"column":29,"offset":8554},"indent":[1]}},{"type":"inlineCode","value":"/tmp/pagerduty","position":{"start":{"line":140,"column":29,"offset":8554},"end":{"line":140,"column":45,"offset":8570},"indent":[]}},{"type":"text","value":", so if the Zabbix user can't write to this directory it won't be able to send alerts to PagerDuty.","position":{"start":{"line":140,"column":45,"offset":8570},"end":{"line":140,"column":144,"offset":8669},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":8479},"end":{"line":140,"column":144,"offset":8669},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Zabbix Troubleshooting Guide\",\"slug\":\"zabbix-troubleshooting-guide\",\"excerpt\":\"\"}","position":{"start":{"line":143,"column":1,"offset":8672},"end":{"line":143,"column":120,"offset":8791},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":143,"column":120,"offset":8791}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Zabbix Troubleshooting Guide\",\n  \"slug\": \"zabbix-troubleshooting-guide\",\n  \"excerpt\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Below are some common issues that you may run into when trying to integrate Zabbix with PagerDuty and steps for troubleshooting those problems. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#section-potential-issues-within-the-zabbix-configuration\"\n  }), \"Potential Issues within the Zabbix Configuration\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#section-troubleshooting-issues-with-the-agent-based-integration\"\n  }), \"Troubleshooting Issues with the Agent-based Integration\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#section-troubleshooting-issues-with-the-python-based-integration\"\n  }), \"Troubleshooting Issues with the Python-based Integration\"), \"[block:api-header]\", \"\\n{\\n\\\"title\\\": \\\"Potential Issues within the Zabbix Configuration\\\"\\n}\\n\", \"[/block]\", \"\\nCheck whether Zabbix has attempted to send an event to PagerDuty by viewing your Zabbix logs. Make sure the PagerDuty action was called, and if there were any errors in doing so.\")), mdx(\"p\", null, \"For Zabbix 2.x: navigate go to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Monitoring \\u2192 Events\"), \", then click the event timestamp for the problem event. Check the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Message actions\"), \" section in the event details.\\nFor Zabbix 3.x: navigate to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reports \\u2192 Action Log\"), \" to view the Status of the Zabbix event.\"), mdx(\"p\", null, \"##Events are not being sent to the PagerDuty user/action\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make sure the PagerDuty group in Zabbix has read permissions for the hosts and/or host groups in question. Also confirm that the PagerDuty user is in the PagerDuty group.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check that the PagerDuty media type is enabled in \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Configuration \\u2192 Media types\"), \".\")), mdx(\"p\", null, \"##Events appear to be sent to the PagerDuty user/action, but aren't showing up in PagerDuty\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Both the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"zabbix-agent\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"zabbix-server\"), \" services must be running for Zabbix to send notifications to PagerDuty. The check that these are running use the following commands:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"service zabbix-agent status\\nservice zabbix-server status\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make sure your Zabbix server can make outbound HTTP/HTTPS connections to events.pagerduty.com on ports 80 and 443. If your environment requires a proxy to be set for outbound HTTP/HTTPS connections, make sure you \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.pagerduty.com/docs/guides/agent-install-guide/#Proxy\"\n  }), \"set the proxy in the agent configuration\"), \" or see the information below for \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#section-troubleshooting-issues-with-the-python-based-integration\"\n  }), \"using a proxy with the old Python integration\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check that the integration key is set correctly in your PagerDuty user's media settings.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you see an error such as \\\"pagerduty_python: PagerDuty server REJECTED the event in file...Event object is invalid,\\\" check the trigger and recovery subjects and message formats in your PagerDuty action.\")), mdx(\"p\", null, \"Under \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Configuration \\u2192 Actions\"), \", select the PagerDuty notification action to view its details. Remove any extra characters, such as whitespace or a newline-character after the text so that the configuration matches this exactly:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Default subject\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"trigger\"), \"\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery subject\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resolve\"), \"\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Default message\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery message\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"name:{TRIGGER.NAME}\\nid:{TRIGGER.ID}\\nstatus:{TRIGGER.STATUS}\\nhostname:{HOSTNAME}\\nip:{IPADDRESS}\\nvalue:{TRIGGER.VALUE}\\nevent_id:{EVENT.ID}\\nseverity:{TRIGGER.SEVERITY}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you're using Zabbix 3.x, make sure you have specified these script parameters for the PagerDuty media type under Administration \\u2192 Media types:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- {ALERT.SENDTO}\\n- {ALERT.SUBJECT}\\n- {ALERT.MESSAGE}\\n\")), \"[block:image]\", \"\\n{\\n\\\"images\\\": [\\n{\\n\\\"image\\\": \", \"[\\n\\\"https://files.readme.io/50d6592-ZabbixTroubleshooting_img2.png\\\",\\n\\\"ZabbixTroubleshooting_img2.png\\\",\\n776,\\n489,\\n\\\"#124c76\\\"\\n]\", \"\\n}\\n]\\n}\\n\", \"[/block]\", \"\\n##Incidents are being triggered in PagerDuty, but they are not being resolved automatically after recovering in Zabbix\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Ensure that your \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"PagerDuty Notifications\"), \" action has messaging operations (send to user / group) defined for its \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Recovery operations\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make sure that the messaging operations configured for the PagerDuty Notifications action have the same message template for the main action as for the recovery action\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make sure the message template is the one given in the integration guide for your Zabbix integration: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.pagerduty.com/docs/guides/zabbix-integration-guide/\"\n  }), \"Zabbix Integration Guide\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.pagerduty.com/docs/guides/zabbix-3-integration-guide/\"\n  }), \"Zabbix 3 Integration Guide\"), \" (also produced above; see \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#section-potential-issues-within-the-zabbix-configuration\"\n  }), \"Potential Issues Within the Zabbix Configuration\"), \").\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Ensure that the recovery operations' default message subject is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"resolve\"), \", verbatim (it is case sensitive)\\n\", \"[block:api-header]\", \"\\n{\\n\\\"title\\\": \\\"Troubleshooting Issues with the Agent-based Integration\\\"\\n}\\n\", \"[/block]\", \"\\n##Verify the Agent is Installed\\nThe most common problem we see when we begin troubleshooting agent integrations is that the agent has not been installed successfully (i.e. trying to install on an incompatible distribution like CentOS 5). The first step in troubleshooting Agent-based integrations is to make sure that the PagerDuty Agent is both compatible with your distribution and successfully installed by following the steps in our Agent Install Guide.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CentOS 5 users\"), \": You will need to use the older \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.pagerduty.com/docs/guides/zabbix-integration-guide-agentless/\"\n  }), \"Python-based integration\"), \", as the PagerDuty Agent requires a newer version of Python than the version available with CentOS 5.\"), mdx(\"p\", null, \"##Verify the Agent is Running\\nOnce you've verified the agent has been successfully installed, you'll want to make sure that it is running. You can check the status by running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"service pdagent status\"), \". If the agent isn't running, you can start it with the command \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"service pdagent start\"), \".\"), mdx(\"p\", null, \"##Check the Agent's Logs for Errors\\nThe agent logs activity and errors to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/var/log/pdagent/pdagentd.log\"), \", which may contain information helpful in troubleshooting problems with the integration.\"), mdx(\"p\", null, \"##Trigger a Test Incident with the Agent's CLI\\nTry manually triggering an incident using the pd-send command and check for errors (set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PD_SERVICE_KEY\"), \" to your own PagerDuty integration key):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ export PD_SERVICE_KEY=65d9cd0e14c04dae8ef86867277d138c\\n$ pd-send -k $PD_SERVICE_KEY -t trigger -d \\\"Server is on fire\\\" -i server.fire\\n\")), mdx(\"p\", null, \"If an incident is triggered in PagerDuty, check the tips in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#section-potential-issues-within-the-zabbix-configuration\"\n  }), \"Potential Issues within your Zabbix Configuration\"), \" section. You may need to verify the trigger subject and message in your Zabbix configuration.\"), mdx(\"p\", null, \"##Trigger a Test Incident with pd-zabbix\\nTry manually triggering an incident using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pd-zabbix\"), \" command and check for errors (set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PD_SERVICE_KEY\"), \" to your own PagerDuty integration key):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"/usr/share/pdagent-integrations/bin/pd-zabbix PD_SERVICE_KEY trigger \\\"name:Test\\nid:1\\nstatus:onfire\\nhostname:localhost\\nip:127.0.0.1\\nvalue:5\\nevent_id:2\\nseverity:1\\\"\\n\")), mdx(\"p\", null, \"[block:api-header]\", \"\\n{\\n\\\"title\\\": \\\"Troubleshooting Issues with the Python-based Integration\\\"\\n}\\n\", \"[/block]\", \"\\n##Make Sure you have Python 2.7.9 or Newer\\nAlthough the Python script was previously tested with Python 2.6, it now requires version 2.7.9 to make a secure connection to PagerDuty. This changed because SSLv3 is no longer enabled on our web servers due to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/POODLE\"\n  }), \"POODLE vulnerability\"), \", and older versions of Python try to use SSLv3. Python 2.7.9 uses a backported version of Python 3's SSL library, so versions 2.7.9 and newer (up to 3.x) are able to make a secure connection to PagerDuty. The script also does not work with Python 3.x due to other language changes in this version of Python.\"), mdx(\"p\", null, \"##Does your Environment Require a Proxy to be set for Outbound HTTP/HTTPS Connections?\\nIf you need to set a proxy, use this modified version of the Python script for proxy support. Replace \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SOME_PROXY\"), \" on line 68 with your proxy address (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://proxy.company.com:3128\"), \").\"), mdx(\"p\", null, \"##Trigger a Test Incident with the pagerduty.py Script\\nTry manually triggering an incident with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pagerduty.py\"), \" via the command line and check for errors (set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PD_SERVICE_KEY\"), \" to your own PagerDuty integration key):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"/etc/zabbix/alert.d/pagerduty.py PD_SERVICE_KEY trigger \\\"name:Test\\nid:1\\nstatus:onfire\\nhostname:localhost\\nip:127.0.0.1\\nvalue:5\\nevent_id:2\\nseverity:1\\\"\\n\")), mdx(\"p\", null, \"##Verify the Python Script is in the Correct Location\\nThe script should be placed in your \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AlertScriptsPath\"), \". This is usually \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/usr/lib/zabbix/alertscripts\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/zabbix/agent.d\"), \", but could be different if you installed Zabbix from non-standard packages. You can find the correct path for your particular environment by checking \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"zabbix_server.conf\"), \" in your Zabbix server configuration directory.\"), mdx(\"p\", null, \"##Verify the Zabbix User has Write Permissions\\nThe script queues events in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/tmp/pagerduty\"), \", so if the Zabbix user can't write to this directory it won't be able to send alerts to PagerDuty.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Zabbix Troubleshooting Guide\",\n  \"slug\": \"zabbix-troubleshooting-guide\",\n  \"excerpt\": \"\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Below are some common issues that you may run into when trying to integrate Zabbix with PagerDuty and steps for troubleshooting those problems. `}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#section-potential-issues-within-the-zabbix-configuration\"\n        }}>{`Potential Issues within the Zabbix Configuration`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#section-troubleshooting-issues-with-the-agent-based-integration\"\n        }}>{`Troubleshooting Issues with the Agent-based Integration`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#section-troubleshooting-issues-with-the-python-based-integration\"\n        }}>{`Troubleshooting Issues with the Python-based Integration`}</a>\n        {`[block:api-header]`}{`\n{\n\"title\": \"Potential Issues within the Zabbix Configuration\"\n}\n`}{`[/block]`}{`\nCheck whether Zabbix has attempted to send an event to PagerDuty by viewing your Zabbix logs. Make sure the PagerDuty action was called, and if there were any errors in doing so.`}</li>\n    </ul>\n    <p>{`For Zabbix 2.x: navigate go to `}<strong parentName=\"p\">{`Monitoring → Events`}</strong>{`, then click the event timestamp for the problem event. Check the `}<strong parentName=\"p\">{`Message actions`}</strong>{` section in the event details.\nFor Zabbix 3.x: navigate to `}<strong parentName=\"p\">{`Reports → Action Log`}</strong>{` to view the Status of the Zabbix event.`}</p>\n    <p>{`##Events are not being sent to the PagerDuty user/action`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Make sure the PagerDuty group in Zabbix has read permissions for the hosts and/or host groups in question. Also confirm that the PagerDuty user is in the PagerDuty group.`}</li>\n      <li parentName=\"ul\">{`Check that the PagerDuty media type is enabled in `}<strong parentName=\"li\">{`Configuration → Media types`}</strong>{`.`}</li>\n    </ul>\n    <p>{`##Events appear to be sent to the PagerDuty user/action, but aren't showing up in PagerDuty`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Both the `}<inlineCode parentName=\"li\">{`zabbix-agent`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`zabbix-server`}</inlineCode>{` services must be running for Zabbix to send notifications to PagerDuty. The check that these are running use the following commands:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`service zabbix-agent status\nservice zabbix-server status\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Make sure your Zabbix server can make outbound HTTP/HTTPS connections to events.pagerduty.com on ports 80 and 443. If your environment requires a proxy to be set for outbound HTTP/HTTPS connections, make sure you `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.pagerduty.com/docs/guides/agent-install-guide/#Proxy\"\n        }}>{`set the proxy in the agent configuration`}</a>{` or see the information below for `}<a parentName=\"li\" {...{\n          \"href\": \"#section-troubleshooting-issues-with-the-python-based-integration\"\n        }}>{`using a proxy with the old Python integration`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Check that the integration key is set correctly in your PagerDuty user's media settings.`}</li>\n      <li parentName=\"ul\">{`If you see an error such as \"pagerduty_python: PagerDuty server REJECTED the event in file...Event object is invalid,\" check the trigger and recovery subjects and message formats in your PagerDuty action.`}</li>\n    </ul>\n    <p>{`Under `}<strong parentName=\"p\">{`Configuration → Actions`}</strong>{`, select the PagerDuty notification action to view its details. Remove any extra characters, such as whitespace or a newline-character after the text so that the configuration matches this exactly:`}</p>\n    <p><strong parentName=\"p\">{`Default subject`}</strong>{`: `}<inlineCode parentName=\"p\">{`trigger`}</inlineCode>{`\n`}<strong parentName=\"p\">{`Recovery subject`}</strong>{`: `}<inlineCode parentName=\"p\">{`resolve`}</inlineCode>{`\n`}<strong parentName=\"p\">{`Default message`}</strong>{` and `}<strong parentName=\"p\">{`Recovery message`}</strong>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`name:{TRIGGER.NAME}\nid:{TRIGGER.ID}\nstatus:{TRIGGER.STATUS}\nhostname:{HOSTNAME}\nip:{IPADDRESS}\nvalue:{TRIGGER.VALUE}\nevent_id:{EVENT.ID}\nseverity:{TRIGGER.SEVERITY}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`If you're using Zabbix 3.x, make sure you have specified these script parameters for the PagerDuty media type under Administration → Media types:`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`- {ALERT.SENDTO}\n- {ALERT.SUBJECT}\n- {ALERT.MESSAGE}\n`}</code></pre>\n        {`[block:image]`}{`\n{\n\"images\": [\n{\n\"image\": `}{`[\n\"https://files.readme.io/50d6592-ZabbixTroubleshooting_img2.png\",\n\"ZabbixTroubleshooting_img2.png\",\n776,\n489,\n\"#124c76\"\n]`}{`\n}\n]\n}\n`}{`[/block]`}{`\n##Incidents are being triggered in PagerDuty, but they are not being resolved automatically after recovering in Zabbix`}</li>\n    </ul>\n    <ol>\n      <li parentName=\"ol\">{`Ensure that your `}<em parentName=\"li\">{`PagerDuty Notifications`}</em>{` action has messaging operations (send to user / group) defined for its `}<strong parentName=\"li\">{`Recovery operations`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Make sure that the messaging operations configured for the PagerDuty Notifications action have the same message template for the main action as for the recovery action`}</li>\n      <li parentName=\"ol\">{`Make sure the message template is the one given in the integration guide for your Zabbix integration: `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.pagerduty.com/docs/guides/zabbix-integration-guide/\"\n        }}>{`Zabbix Integration Guide`}</a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.pagerduty.com/docs/guides/zabbix-3-integration-guide/\"\n        }}>{`Zabbix 3 Integration Guide`}</a>{` (also produced above; see `}<a parentName=\"li\" {...{\n          \"href\": \"#section-potential-issues-within-the-zabbix-configuration\"\n        }}>{`Potential Issues Within the Zabbix Configuration`}</a>{`).`}</li>\n      <li parentName=\"ol\">{`Ensure that the recovery operations' default message subject is `}<inlineCode parentName=\"li\">{`resolve`}</inlineCode>{`, verbatim (it is case sensitive)\n`}{`[block:api-header]`}{`\n{\n\"title\": \"Troubleshooting Issues with the Agent-based Integration\"\n}\n`}{`[/block]`}{`\n##Verify the Agent is Installed\nThe most common problem we see when we begin troubleshooting agent integrations is that the agent has not been installed successfully (i.e. trying to install on an incompatible distribution like CentOS 5). The first step in troubleshooting Agent-based integrations is to make sure that the PagerDuty Agent is both compatible with your distribution and successfully installed by following the steps in our Agent Install Guide.`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`CentOS 5 users`}</strong>{`: You will need to use the older `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.pagerduty.com/docs/guides/zabbix-integration-guide-agentless/\"\n      }}>{`Python-based integration`}</a>{`, as the PagerDuty Agent requires a newer version of Python than the version available with CentOS 5.`}</p>\n    <p>{`##Verify the Agent is Running\nOnce you've verified the agent has been successfully installed, you'll want to make sure that it is running. You can check the status by running `}<inlineCode parentName=\"p\">{`service pdagent status`}</inlineCode>{`. If the agent isn't running, you can start it with the command `}<inlineCode parentName=\"p\">{`service pdagent start`}</inlineCode>{`.`}</p>\n    <p>{`##Check the Agent's Logs for Errors\nThe agent logs activity and errors to `}<inlineCode parentName=\"p\">{`/var/log/pdagent/pdagentd.log`}</inlineCode>{`, which may contain information helpful in troubleshooting problems with the integration.`}</p>\n    <p>{`##Trigger a Test Incident with the Agent's CLI\nTry manually triggering an incident using the pd-send command and check for errors (set `}<inlineCode parentName=\"p\">{`PD_SERVICE_KEY`}</inlineCode>{` to your own PagerDuty integration key):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ export PD_SERVICE_KEY=65d9cd0e14c04dae8ef86867277d138c\n$ pd-send -k $PD_SERVICE_KEY -t trigger -d \"Server is on fire\" -i server.fire\n`}</code></pre>\n    <p>{`If an incident is triggered in PagerDuty, check the tips in the `}<a parentName=\"p\" {...{\n        \"href\": \"#section-potential-issues-within-the-zabbix-configuration\"\n      }}>{`Potential Issues within your Zabbix Configuration`}</a>{` section. You may need to verify the trigger subject and message in your Zabbix configuration.`}</p>\n    <p>{`##Trigger a Test Incident with pd-zabbix\nTry manually triggering an incident using the `}<inlineCode parentName=\"p\">{`pd-zabbix`}</inlineCode>{` command and check for errors (set `}<inlineCode parentName=\"p\">{`PD_SERVICE_KEY`}</inlineCode>{` to your own PagerDuty integration key):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/usr/share/pdagent-integrations/bin/pd-zabbix PD_SERVICE_KEY trigger \"name:Test\nid:1\nstatus:onfire\nhostname:localhost\nip:127.0.0.1\nvalue:5\nevent_id:2\nseverity:1\"\n`}</code></pre>\n    <p>{`[block:api-header]`}{`\n{\n\"title\": \"Troubleshooting Issues with the Python-based Integration\"\n}\n`}{`[/block]`}{`\n##Make Sure you have Python 2.7.9 or Newer\nAlthough the Python script was previously tested with Python 2.6, it now requires version 2.7.9 to make a secure connection to PagerDuty. This changed because SSLv3 is no longer enabled on our web servers due to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/POODLE\"\n      }}>{`POODLE vulnerability`}</a>{`, and older versions of Python try to use SSLv3. Python 2.7.9 uses a backported version of Python 3's SSL library, so versions 2.7.9 and newer (up to 3.x) are able to make a secure connection to PagerDuty. The script also does not work with Python 3.x due to other language changes in this version of Python.`}</p>\n    <p>{`##Does your Environment Require a Proxy to be set for Outbound HTTP/HTTPS Connections?\nIf you need to set a proxy, use this modified version of the Python script for proxy support. Replace `}<inlineCode parentName=\"p\">{`SOME_PROXY`}</inlineCode>{` on line 68 with your proxy address (i.e. `}<inlineCode parentName=\"p\">{`http://proxy.company.com:3128`}</inlineCode>{`).`}</p>\n    <p>{`##Trigger a Test Incident with the pagerduty.py Script\nTry manually triggering an incident with `}<inlineCode parentName=\"p\">{`pagerduty.py`}</inlineCode>{` via the command line and check for errors (set `}<inlineCode parentName=\"p\">{`PD_SERVICE_KEY`}</inlineCode>{` to your own PagerDuty integration key):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/etc/zabbix/alert.d/pagerduty.py PD_SERVICE_KEY trigger \"name:Test\nid:1\nstatus:onfire\nhostname:localhost\nip:127.0.0.1\nvalue:5\nevent_id:2\nseverity:1\"\n`}</code></pre>\n    <p>{`##Verify the Python Script is in the Correct Location\nThe script should be placed in your `}<strong parentName=\"p\">{`AlertScriptsPath`}</strong>{`. This is usually `}<inlineCode parentName=\"p\">{`/usr/lib/zabbix/alertscripts`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`/etc/zabbix/agent.d`}</inlineCode>{`, but could be different if you installed Zabbix from non-standard packages. You can find the correct path for your particular environment by checking `}<inlineCode parentName=\"p\">{`zabbix_server.conf`}</inlineCode>{` in your Zabbix server configuration directory.`}</p>\n    <p>{`##Verify the Zabbix User has Write Permissions\nThe script queues events in `}<inlineCode parentName=\"p\">{`/tmp/pagerduty`}</inlineCode>{`, so if the Zabbix user can't write to this directory it won't be able to send alerts to PagerDuty.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}