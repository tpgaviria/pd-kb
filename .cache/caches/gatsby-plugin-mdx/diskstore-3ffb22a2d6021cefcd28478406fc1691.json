{"expireTime":9007200861767572000,"key":"gatsby-plugin-mdx-entire-payload-404bcd071ab6a005e9e096145a9fd13a-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"It is possible to create inbound integrations using the ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":57,"offset":56},"indent":[]}},{"type":"link","title":null,"url":"https://v2.developer.pagerduty.com/v2/page/api-reference#!/Services/post_services_id_integrations","children":[{"type":"text","value":"REST API action ","position":{"start":{"line":1,"column":58,"offset":57},"end":{"line":1,"column":74,"offset":73},"indent":[]}},{"type":"inlineCode","value":"POST /services/{id}/integrations","position":{"start":{"line":1,"column":74,"offset":73},"end":{"line":1,"column":108,"offset":107},"indent":[]}}],"position":{"start":{"line":1,"column":57,"offset":56},"end":{"line":1,"column":208,"offset":207},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1,"column":208,"offset":207},"end":{"line":1,"column":209,"offset":208},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":209,"offset":208},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Choose a Vendor\"","position":{"start":{"line":2,"column":4,"offset":212},"end":{"line":2,"column":20,"offset":228},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":209},"end":{"line":2,"column":20,"offset":228},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"}\n","position":{"start":{"line":3,"column":1,"offset":229},"end":{"line":4,"column":1,"offset":231},"indent":[1]}},{"type":"linkReference","identifier":"/block","label":"/block","referenceType":"shortcut","children":[{"type":"text","value":"/block","position":{"start":{"line":4,"column":2,"offset":232},"end":{"line":4,"column":8,"offset":238},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":231},"end":{"line":4,"column":9,"offset":239},"indent":[]}},{"type":"text","value":"\nIf you are creating any kind of non-generic integration, you will need to specify a value for the ","position":{"start":{"line":4,"column":9,"offset":239},"end":{"line":5,"column":99,"offset":338},"indent":[1]}},{"type":"inlineCode","value":"vendor","position":{"start":{"line":5,"column":99,"offset":338},"end":{"line":5,"column":107,"offset":346},"indent":[]}},{"type":"text","value":" property of the integration. Note, you can only set the vendor when creating the integration.","position":{"start":{"line":5,"column":107,"offset":346},"end":{"line":5,"column":201,"offset":440},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":229},"end":{"line":5,"column":201,"offset":440},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The list of available integrations can be obtained through the ","position":{"start":{"line":7,"column":1,"offset":442},"end":{"line":7,"column":64,"offset":505},"indent":[]}},{"type":"link","title":null,"url":"https://v2.developer.pagerduty.com/v2/page/api-reference#!/Vendors/get_vendors","children":[{"type":"inlineCode","value":"/vendors","position":{"start":{"line":7,"column":65,"offset":506},"end":{"line":7,"column":75,"offset":516},"indent":[]}},{"type":"text","value":" index","position":{"start":{"line":7,"column":75,"offset":516},"end":{"line":7,"column":81,"offset":522},"indent":[]}}],"position":{"start":{"line":7,"column":64,"offset":505},"end":{"line":7,"column":162,"offset":603},"indent":[]}},{"type":"text","value":", which is an ","position":{"start":{"line":7,"column":162,"offset":603},"end":{"line":7,"column":176,"offset":617},"indent":[]}},{"type":"link","title":null,"url":"https://v2.developer.pagerduty.com/docs/endpoints#resources-index","children":[{"type":"text","value":"index endpoint","position":{"start":{"line":7,"column":177,"offset":618},"end":{"line":7,"column":191,"offset":632},"indent":[]}}],"position":{"start":{"line":7,"column":176,"offset":617},"end":{"line":7,"column":259,"offset":700},"indent":[]}},{"type":"text","value":" that supports ","position":{"start":{"line":7,"column":259,"offset":700},"end":{"line":7,"column":274,"offset":715},"indent":[]}},{"type":"link","title":null,"url":"https://v2.developer.pagerduty.com/docs/pagination","children":[{"type":"text","value":"pagination","position":{"start":{"line":7,"column":275,"offset":716},"end":{"line":7,"column":285,"offset":726},"indent":[]}}],"position":{"start":{"line":7,"column":274,"offset":715},"end":{"line":7,"column":338,"offset":779},"indent":[]}},{"type":"text","value":". Each of the resource objects returned by this endpoint have an ","position":{"start":{"line":7,"column":338,"offset":779},"end":{"line":7,"column":403,"offset":844},"indent":[]}},{"type":"inlineCode","value":"id","position":{"start":{"line":7,"column":403,"offset":844},"end":{"line":7,"column":407,"offset":848},"indent":[]}},{"type":"text","value":" property that will be necessary in order to construct the ","position":{"start":{"line":7,"column":407,"offset":848},"end":{"line":7,"column":466,"offset":907},"indent":[]}},{"type":"inlineCode","value":"vendor","position":{"start":{"line":7,"column":466,"offset":907},"end":{"line":7,"column":474,"offset":915},"indent":[]}},{"type":"text","value":" property of the new integration. ","position":{"start":{"line":7,"column":474,"offset":915},"end":{"line":7,"column":508,"offset":949},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":442},"end":{"line":7,"column":508,"offset":949},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The next step, once the appropriate vendor's ID is found, is to set the ","position":{"start":{"line":9,"column":1,"offset":951},"end":{"line":9,"column":73,"offset":1023},"indent":[]}},{"type":"inlineCode","value":"vendor","position":{"start":{"line":9,"column":73,"offset":1023},"end":{"line":9,"column":81,"offset":1031},"indent":[]}},{"type":"text","value":" property of the integration object that you wish to create as a ","position":{"start":{"line":9,"column":81,"offset":1031},"end":{"line":9,"column":146,"offset":1096},"indent":[]}},{"type":"link","title":null,"url":"https://v2.developer.pagerduty.com/docs/references","children":[{"type":"text","value":"resource reference","position":{"start":{"line":9,"column":147,"offset":1097},"end":{"line":9,"column":165,"offset":1115},"indent":[]}}],"position":{"start":{"line":9,"column":146,"offset":1096},"end":{"line":9,"column":218,"offset":1168},"indent":[]}},{"type":"text","value":" to the vendor. Note, this can also be done by simply taking the vendor resource object and setting the ","position":{"start":{"line":9,"column":218,"offset":1168},"end":{"line":9,"column":322,"offset":1272},"indent":[]}},{"type":"inlineCode","value":"vendor","position":{"start":{"line":9,"column":322,"offset":1272},"end":{"line":9,"column":330,"offset":1280},"indent":[]}},{"type":"text","value":" property of the integration equal to it.","position":{"start":{"line":9,"column":330,"offset":1280},"end":{"line":9,"column":371,"offset":1321},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":951},"end":{"line":9,"column":371,"offset":1321},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Select a Type For the Integration\"","position":{"start":{"line":10,"column":4,"offset":1325},"end":{"line":10,"column":38,"offset":1359},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":1322},"end":{"line":10,"column":38,"offset":1359},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"}\n","position":{"start":{"line":11,"column":1,"offset":1360},"end":{"line":12,"column":1,"offset":1362},"indent":[1]}},{"type":"linkReference","identifier":"/block","label":"/block","referenceType":"shortcut","children":[{"type":"text","value":"/block","position":{"start":{"line":12,"column":2,"offset":1363},"end":{"line":12,"column":8,"offset":1369},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":1362},"end":{"line":12,"column":9,"offset":1370},"indent":[]}},{"type":"text","value":"\nThe integration itself will still need a ","position":{"start":{"line":12,"column":9,"offset":1370},"end":{"line":13,"column":42,"offset":1412},"indent":[1]}},{"type":"inlineCode","value":"type","position":{"start":{"line":13,"column":42,"offset":1412},"end":{"line":13,"column":48,"offset":1418},"indent":[]}},{"type":"text","value":" property. If setting a vendor, one does not need to set it to anything in particular for each different vendor. Rather:","position":{"start":{"line":13,"column":48,"offset":1418},"end":{"line":13,"column":168,"offset":1538},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":1360},"end":{"line":13,"column":168,"offset":1538},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"If creating an integration that is Events API based:","position":{"start":{"line":15,"column":5,"offset":1544},"end":{"line":15,"column":57,"offset":1596},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":1542},"end":{"line":15,"column":59,"offset":1598},"indent":[]}},{"type":"text","value":" use ","position":{"start":{"line":15,"column":59,"offset":1598},"end":{"line":15,"column":64,"offset":1603},"indent":[]}},{"type":"inlineCode","value":"generic_events_api_inbound_integration","position":{"start":{"line":15,"column":64,"offset":1603},"end":{"line":15,"column":104,"offset":1643},"indent":[]}},{"type":"text","value":". You can tell that an integration uses the Events API if:","position":{"start":{"line":15,"column":104,"offset":1643},"end":{"line":15,"column":162,"offset":1701},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":1542},"end":{"line":15,"column":162,"offset":1701},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It uses ","position":{"start":{"line":16,"column":7,"offset":1708},"end":{"line":16,"column":15,"offset":1716},"indent":[]}},{"type":"link","title":null,"url":"https://www.pagerduty.com/docs/guides/pagerduty-connect/","children":[{"type":"text","value":"PagerDuty Connect","position":{"start":{"line":16,"column":16,"offset":1717},"end":{"line":16,"column":33,"offset":1734},"indent":[]}}],"position":{"start":{"line":16,"column":15,"offset":1716},"end":{"line":16,"column":92,"offset":1793},"indent":[]}},{"type":"text","value":" to set up the integration (an authorization process that takes you between the vendor's product and PagerDuty and back again during the set up process)","position":{"start":{"line":16,"column":92,"offset":1793},"end":{"line":16,"column":244,"offset":1945},"indent":[]}}],"position":{"start":{"line":16,"column":7,"offset":1708},"end":{"line":16,"column":244,"offset":1945},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":1704},"end":{"line":16,"column":244,"offset":1945},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It involves an integration URL, and/or an integration key (a 32-digit hexadecimal number)","position":{"start":{"line":17,"column":7,"offset":1952},"end":{"line":17,"column":96,"offset":2041},"indent":[]}}],"position":{"start":{"line":17,"column":7,"offset":1952},"end":{"line":17,"column":96,"offset":2041},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":1948},"end":{"line":17,"column":96,"offset":2041},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":1704},"end":{"line":17,"column":96,"offset":2041},"indent":[3]}}],"position":{"start":{"line":15,"column":1,"offset":1540},"end":{"line":17,"column":96,"offset":2041},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"If creating an integration that is email-based:","position":{"start":{"line":18,"column":5,"offset":2046},"end":{"line":18,"column":52,"offset":2093},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":2044},"end":{"line":18,"column":54,"offset":2095},"indent":[]}},{"type":"text","value":" use ","position":{"start":{"line":18,"column":54,"offset":2095},"end":{"line":18,"column":59,"offset":2100},"indent":[]}},{"type":"inlineCode","value":"generic_email_inbound_integration","position":{"start":{"line":18,"column":59,"offset":2100},"end":{"line":18,"column":94,"offset":2135},"indent":[]}},{"type":"text","value":". If setting up the integration involves an email address, it is email-based.","position":{"start":{"line":18,"column":94,"offset":2135},"end":{"line":18,"column":171,"offset":2212},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":2044},"end":{"line":18,"column":171,"offset":2212},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":2042},"end":{"line":18,"column":171,"offset":2212},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1540},"end":{"line":18,"column":171,"offset":2212},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Once the integration is created, its type will automatically update to the appropriate value.","position":{"start":{"line":20,"column":1,"offset":2214},"end":{"line":20,"column":94,"offset":2307},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":2214},"end":{"line":20,"column":94,"offset":2307},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The Request Schema\"","position":{"start":{"line":21,"column":4,"offset":2311},"end":{"line":21,"column":23,"offset":2330},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":2308},"end":{"line":21,"column":23,"offset":2330},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"}\n","position":{"start":{"line":22,"column":1,"offset":2331},"end":{"line":23,"column":1,"offset":2333},"indent":[1]}},{"type":"linkReference","identifier":"/block","label":"/block","referenceType":"shortcut","children":[{"type":"text","value":"/block","position":{"start":{"line":23,"column":2,"offset":2334},"end":{"line":23,"column":8,"offset":2340},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":2333},"end":{"line":23,"column":9,"offset":2341},"indent":[]}},{"type":"text","value":"\nPutting it all together: for example, if creating an AWS CloudWatch integration:","position":{"start":{"line":23,"column":9,"offset":2341},"end":{"line":24,"column":81,"offset":2422},"indent":[1]}}],"position":{"start":{"line":22,"column":1,"offset":2331},"end":{"line":24,"column":81,"offset":2422},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The vendor ID is ","position":{"start":{"line":26,"column":3,"offset":2426},"end":{"line":26,"column":20,"offset":2443},"indent":[]}},{"type":"inlineCode","value":"PZQ6AUS","position":{"start":{"line":26,"column":20,"offset":2443},"end":{"line":26,"column":29,"offset":2452},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":2426},"end":{"line":26,"column":29,"offset":2452},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2424},"end":{"line":26,"column":29,"offset":2452},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The type should be ","position":{"start":{"line":27,"column":3,"offset":2455},"end":{"line":27,"column":22,"offset":2474},"indent":[]}},{"type":"inlineCode","value":"generic_events_api_inbound_integration","position":{"start":{"line":27,"column":22,"offset":2474},"end":{"line":27,"column":62,"offset":2514},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":2455},"end":{"line":27,"column":62,"offset":2514},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":2453},"end":{"line":27,"column":62,"offset":2514},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2424},"end":{"line":27,"column":62,"offset":2514},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Therefore, the body of the ","position":{"start":{"line":29,"column":1,"offset":2516},"end":{"line":29,"column":28,"offset":2543},"indent":[]}},{"type":"inlineCode","value":"POST","position":{"start":{"line":29,"column":28,"offset":2543},"end":{"line":29,"column":34,"offset":2549},"indent":[]}},{"type":"text","value":" request to ","position":{"start":{"line":29,"column":34,"offset":2549},"end":{"line":29,"column":46,"offset":2561},"indent":[]}},{"type":"inlineCode","value":"/services/{id}/integrations","position":{"start":{"line":29,"column":46,"offset":2561},"end":{"line":29,"column":75,"offset":2590},"indent":[]}},{"type":"text","value":" should look something like this:","position":{"start":{"line":29,"column":75,"offset":2590},"end":{"line":29,"column":108,"offset":2623},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":2516},"end":{"line":29,"column":108,"offset":2623},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"{\n    \"integration\": {\n        \"type\": \"generic_events_api_inbound_integration\",\n        \"summary\": \"AWS CloudWatch Integration\",\n        \"name\": \"CloudWatch\",\n        \"vendor\": {\"type\":\"vendor_reference\", \"id\":\"PZQ6AUS\"}\n    }\n}","position":{"start":{"line":31,"column":1,"offset":2625},"end":{"line":40,"column":4,"offset":2862},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"block:callout","label":"block:callout","referenceType":"shortcut","children":[{"type":"text","value":"block:callout","position":{"start":{"line":43,"column":2,"offset":2866},"end":{"line":43,"column":15,"offset":2879},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2865},"end":{"line":43,"column":16,"offset":2880},"indent":[]}},{"type":"text","value":"\n{\n  \"type\": \"info\",\n  \"title\": \"If creating an email-based integration\",\n  \"body\": \"You have the option of specifying an integration address by setting the ","position":{"start":{"line":43,"column":16,"offset":2880},"end":{"line":47,"column":84,"offset":3037},"indent":[1,1,1,1]}},{"type":"inlineCode","value":"integration_email","position":{"start":{"line":47,"column":84,"offset":3037},"end":{"line":47,"column":103,"offset":3056},"indent":[]}},{"type":"text","value":" property of the integration when creating it. If you do not specify one, an email address for the integration will be randomly generated using a ","position":{"start":{"line":47,"column":103,"offset":3056},"end":{"line":47,"column":249,"offset":3202},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator","children":[{"type":"text","value":"CSPRNG","position":{"start":{"line":47,"column":250,"offset":3203},"end":{"line":47,"column":256,"offset":3209},"indent":[]}}],"position":{"start":{"line":47,"column":249,"offset":3202},"end":{"line":47,"column":343,"offset":3296},"indent":[]}},{"type":"text","value":", similar to how integration keys are created.\"\n}\n","position":{"start":{"line":47,"column":343,"offset":3296},"end":{"line":49,"column":1,"offset":3346},"indent":[1,1]}},{"type":"linkReference","identifier":"/block","label":"/block","referenceType":"shortcut","children":[{"type":"text","value":"/block","position":{"start":{"line":49,"column":2,"offset":3347},"end":{"line":49,"column":8,"offset":3353},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":3346},"end":{"line":49,"column":9,"offset":3354},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2865},"end":{"line":49,"column":9,"offset":3354},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Obtaining the Routing Key\"","position":{"start":{"line":51,"column":4,"offset":3359},"end":{"line":51,"column":30,"offset":3385},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":3356},"end":{"line":51,"column":30,"offset":3385},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"}\n","position":{"start":{"line":52,"column":1,"offset":3386},"end":{"line":53,"column":1,"offset":3388},"indent":[1]}},{"type":"linkReference","identifier":"/block","label":"/block","referenceType":"shortcut","children":[{"type":"text","value":"/block","position":{"start":{"line":53,"column":2,"offset":3389},"end":{"line":53,"column":8,"offset":3395},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":3388},"end":{"line":53,"column":9,"offset":3396},"indent":[]}},{"type":"text","value":"\nOnce created, the body of the response will contain the integration key or integration email, which can be used to trigger, acknowledge and resolve alerts and incidents in PagerDuty.","position":{"start":{"line":53,"column":9,"offset":3396},"end":{"line":54,"column":183,"offset":3579},"indent":[1]}}],"position":{"start":{"line":52,"column":1,"offset":3386},"end":{"line":54,"column":183,"offset":3579},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If the integration is API-based, the ","position":{"start":{"line":56,"column":1,"offset":3581},"end":{"line":56,"column":38,"offset":3618},"indent":[]}},{"type":"inlineCode","value":"integration_key","position":{"start":{"line":56,"column":38,"offset":3618},"end":{"line":56,"column":55,"offset":3635},"indent":[]}},{"type":"text","value":" of the ","position":{"start":{"line":56,"column":55,"offset":3635},"end":{"line":56,"column":63,"offset":3643},"indent":[]}},{"type":"inlineCode","value":"integration","position":{"start":{"line":56,"column":63,"offset":3643},"end":{"line":56,"column":76,"offset":3656},"indent":[]}},{"type":"text","value":" object in the response will contain the key. If it is email-based, it will have a property ","position":{"start":{"line":56,"column":76,"offset":3656},"end":{"line":56,"column":168,"offset":3748},"indent":[]}},{"type":"inlineCode","value":"integration_email","position":{"start":{"line":56,"column":168,"offset":3748},"end":{"line":56,"column":187,"offset":3767},"indent":[]}},{"type":"text","value":" containing the email address of the integration.","position":{"start":{"line":56,"column":187,"offset":3767},"end":{"line":56,"column":236,"offset":3816},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":3581},"end":{"line":56,"column":236,"offset":3816},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Creating Inbound Integrations Through the REST API\",\"slug\":\"creating-inbound-integrations-through-the-rest-api\",\"hidden\":true,\"createdAt\":\"2019-01-23T23:11:31.677Z\",\"updatedAt\":\"2019-01-26T00:23:20.194Z\"}","position":{"start":{"line":58,"column":1,"offset":3818},"end":{"line":58,"column":243,"offset":4060},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":58,"column":243,"offset":4060}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating Inbound Integrations Through the REST API\",\n  \"slug\": \"creating-inbound-integrations-through-the-rest-api\",\n  \"hidden\": true,\n  \"createdAt\": \"2019-01-23T23:11:31.677Z\",\n  \"updatedAt\": \"2019-01-26T00:23:20.194Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"It is possible to create inbound integrations using the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://v2.developer.pagerduty.com/v2/page/api-reference#!/Services/post_services_id_integrations\"\n  }), \"REST API action \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"POST /services/{id}/integrations\")), \".\"), mdx(\"h2\", {\n    \"id\": \"choose-a-vendor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#choose-a-vendor\",\n    \"aria-label\": \"choose a vendor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Choose a Vendor\\\"\"), mdx(\"p\", null, \"}\\n\", \"[/block]\", \"\\nIf you are creating any kind of non-generic integration, you will need to specify a value for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vendor\"), \" property of the integration. Note, you can only set the vendor when creating the integration.\"), mdx(\"p\", null, \"The list of available integrations can be obtained through the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://v2.developer.pagerduty.com/v2/page/api-reference#!/Vendors/get_vendors\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"/vendors\"), \" index\"), \", which is an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://v2.developer.pagerduty.com/docs/endpoints#resources-index\"\n  }), \"index endpoint\"), \" that supports \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://v2.developer.pagerduty.com/docs/pagination\"\n  }), \"pagination\"), \". Each of the resource objects returned by this endpoint have an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" property that will be necessary in order to construct the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vendor\"), \" property of the new integration. \"), mdx(\"p\", null, \"The next step, once the appropriate vendor's ID is found, is to set the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vendor\"), \" property of the integration object that you wish to create as a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://v2.developer.pagerduty.com/docs/references\"\n  }), \"resource reference\"), \" to the vendor. Note, this can also be done by simply taking the vendor resource object and setting the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vendor\"), \" property of the integration equal to it.\"), mdx(\"h2\", {\n    \"id\": \"select-a-type-for-the-integration\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#select-a-type-for-the-integration\",\n    \"aria-label\": \"select a type for the integration permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Select a Type For the Integration\\\"\"), mdx(\"p\", null, \"}\\n\", \"[/block]\", \"\\nThe integration itself will still need a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\"), \" property. If setting a vendor, one does not need to set it to anything in particular for each different vendor. Rather:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"If creating an integration that is Events API based:\"), \" use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"generic_events_api_inbound_integration\"), \". You can tell that an integration uses the Events API if:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It uses \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.pagerduty.com/docs/guides/pagerduty-connect/\"\n  }), \"PagerDuty Connect\"), \" to set up the integration (an authorization process that takes you between the vendor's product and PagerDuty and back again during the set up process)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It involves an integration URL, and/or an integration key (a 32-digit hexadecimal number)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"If creating an integration that is email-based:\"), \" use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"generic_email_inbound_integration\"), \". If setting up the integration involves an email address, it is email-based.\")), mdx(\"p\", null, \"Once the integration is created, its type will automatically update to the appropriate value.\"), mdx(\"h2\", {\n    \"id\": \"the-request-schema\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#the-request-schema\",\n    \"aria-label\": \"the request schema permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"The Request Schema\\\"\"), mdx(\"p\", null, \"}\\n\", \"[/block]\", \"\\nPutting it all together: for example, if creating an AWS CloudWatch integration:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The vendor ID is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PZQ6AUS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The type should be \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"generic_events_api_inbound_integration\"))), mdx(\"p\", null, \"Therefore, the body of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST\"), \" request to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/services/{id}/integrations\"), \" should look something like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n    \\\"integration\\\": {\\n        \\\"type\\\": \\\"generic_events_api_inbound_integration\\\",\\n        \\\"summary\\\": \\\"AWS CloudWatch Integration\\\",\\n        \\\"name\\\": \\\"CloudWatch\\\",\\n        \\\"vendor\\\": {\\\"type\\\":\\\"vendor_reference\\\", \\\"id\\\":\\\"PZQ6AUS\\\"}\\n    }\\n}\\n\")), mdx(\"p\", null, \"[block:callout]\", \"\\n{\\n\\\"type\\\": \\\"info\\\",\\n\\\"title\\\": \\\"If creating an email-based integration\\\",\\n\\\"body\\\": \\\"You have the option of specifying an integration address by setting the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integration_email\"), \" property of the integration when creating it. If you do not specify one, an email address for the integration will be randomly generated using a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator\"\n  }), \"CSPRNG\"), \", similar to how integration keys are created.\\\"\\n}\\n\", \"[/block]\"), mdx(\"h2\", {\n    \"id\": \"obtaining-the-routing-key\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#obtaining-the-routing-key\",\n    \"aria-label\": \"obtaining the routing key permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Obtaining the Routing Key\\\"\"), mdx(\"p\", null, \"}\\n\", \"[/block]\", \"\\nOnce created, the body of the response will contain the integration key or integration email, which can be used to trigger, acknowledge and resolve alerts and incidents in PagerDuty.\"), mdx(\"p\", null, \"If the integration is API-based, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integration_key\"), \" of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integration\"), \" object in the response will contain the key. If it is email-based, it will have a property \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integration_email\"), \" containing the email address of the integration.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Creating Inbound Integrations Through the REST API\",\n  \"slug\": \"creating-inbound-integrations-through-the-rest-api\",\n  \"hidden\": true,\n  \"createdAt\": \"2019-01-23T23:11:31.677Z\",\n  \"updatedAt\": \"2019-01-26T00:23:20.194Z\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`It is possible to create inbound integrations using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://v2.developer.pagerduty.com/v2/page/api-reference#!/Services/post_services_id_integrations\"\n      }}>{`REST API action `}<inlineCode parentName=\"a\">{`POST /services/{id}/integrations`}</inlineCode></a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"choose-a-vendor\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#choose-a-vendor\",\n        \"aria-label\": \"choose a vendor permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Choose a Vendor\"`}</h2>\n    <p>{`}\n`}{`[/block]`}{`\nIf you are creating any kind of non-generic integration, you will need to specify a value for the `}<inlineCode parentName=\"p\">{`vendor`}</inlineCode>{` property of the integration. Note, you can only set the vendor when creating the integration.`}</p>\n    <p>{`The list of available integrations can be obtained through the `}<a parentName=\"p\" {...{\n        \"href\": \"https://v2.developer.pagerduty.com/v2/page/api-reference#!/Vendors/get_vendors\"\n      }}><inlineCode parentName=\"a\">{`/vendors`}</inlineCode>{` index`}</a>{`, which is an `}<a parentName=\"p\" {...{\n        \"href\": \"https://v2.developer.pagerduty.com/docs/endpoints#resources-index\"\n      }}>{`index endpoint`}</a>{` that supports `}<a parentName=\"p\" {...{\n        \"href\": \"https://v2.developer.pagerduty.com/docs/pagination\"\n      }}>{`pagination`}</a>{`. Each of the resource objects returned by this endpoint have an `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` property that will be necessary in order to construct the `}<inlineCode parentName=\"p\">{`vendor`}</inlineCode>{` property of the new integration. `}</p>\n    <p>{`The next step, once the appropriate vendor's ID is found, is to set the `}<inlineCode parentName=\"p\">{`vendor`}</inlineCode>{` property of the integration object that you wish to create as a `}<a parentName=\"p\" {...{\n        \"href\": \"https://v2.developer.pagerduty.com/docs/references\"\n      }}>{`resource reference`}</a>{` to the vendor. Note, this can also be done by simply taking the vendor resource object and setting the `}<inlineCode parentName=\"p\">{`vendor`}</inlineCode>{` property of the integration equal to it.`}</p>\n    <h2 {...{\n      \"id\": \"select-a-type-for-the-integration\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#select-a-type-for-the-integration\",\n        \"aria-label\": \"select a type for the integration permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Select a Type For the Integration\"`}</h2>\n    <p>{`}\n`}{`[/block]`}{`\nThe integration itself will still need a `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` property. If setting a vendor, one does not need to set it to anything in particular for each different vendor. Rather:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`If creating an integration that is Events API based:`}</strong>{` use `}<inlineCode parentName=\"li\">{`generic_events_api_inbound_integration`}</inlineCode>{`. You can tell that an integration uses the Events API if:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`It uses `}<a parentName=\"li\" {...{\n              \"href\": \"https://www.pagerduty.com/docs/guides/pagerduty-connect/\"\n            }}>{`PagerDuty Connect`}</a>{` to set up the integration (an authorization process that takes you between the vendor's product and PagerDuty and back again during the set up process)`}</li>\n          <li parentName=\"ul\">{`It involves an integration URL, and/or an integration key (a 32-digit hexadecimal number)`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`If creating an integration that is email-based:`}</strong>{` use `}<inlineCode parentName=\"li\">{`generic_email_inbound_integration`}</inlineCode>{`. If setting up the integration involves an email address, it is email-based.`}</li>\n    </ul>\n    <p>{`Once the integration is created, its type will automatically update to the appropriate value.`}</p>\n    <h2 {...{\n      \"id\": \"the-request-schema\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#the-request-schema\",\n        \"aria-label\": \"the request schema permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`The Request Schema\"`}</h2>\n    <p>{`}\n`}{`[/block]`}{`\nPutting it all together: for example, if creating an AWS CloudWatch integration:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The vendor ID is `}<inlineCode parentName=\"li\">{`PZQ6AUS`}</inlineCode></li>\n      <li parentName=\"ul\">{`The type should be `}<inlineCode parentName=\"li\">{`generic_events_api_inbound_integration`}</inlineCode></li>\n    </ul>\n    <p>{`Therefore, the body of the `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{` request to `}<inlineCode parentName=\"p\">{`/services/{id}/integrations`}</inlineCode>{` should look something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"integration\": {\n        \"type\": \"generic_events_api_inbound_integration\",\n        \"summary\": \"AWS CloudWatch Integration\",\n        \"name\": \"CloudWatch\",\n        \"vendor\": {\"type\":\"vendor_reference\", \"id\":\"PZQ6AUS\"}\n    }\n}\n`}</code></pre>\n    <p>{`[block:callout]`}{`\n{\n\"type\": \"info\",\n\"title\": \"If creating an email-based integration\",\n\"body\": \"You have the option of specifying an integration address by setting the `}<inlineCode parentName=\"p\">{`integration_email`}</inlineCode>{` property of the integration when creating it. If you do not specify one, an email address for the integration will be randomly generated using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator\"\n      }}>{`CSPRNG`}</a>{`, similar to how integration keys are created.\"\n}\n`}{`[/block]`}</p>\n    <h2 {...{\n      \"id\": \"obtaining-the-routing-key\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#obtaining-the-routing-key\",\n        \"aria-label\": \"obtaining the routing key permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Obtaining the Routing Key\"`}</h2>\n    <p>{`}\n`}{`[/block]`}{`\nOnce created, the body of the response will contain the integration key or integration email, which can be used to trigger, acknowledge and resolve alerts and incidents in PagerDuty.`}</p>\n    <p>{`If the integration is API-based, the `}<inlineCode parentName=\"p\">{`integration_key`}</inlineCode>{` of the `}<inlineCode parentName=\"p\">{`integration`}</inlineCode>{` object in the response will contain the key. If it is email-based, it will have a property `}<inlineCode parentName=\"p\">{`integration_email`}</inlineCode>{` containing the email address of the integration.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}